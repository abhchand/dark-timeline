{"version":3,"sources":["Timeline/Header/CharacterFilter/CharacterFilter.jsx","Timeline/Header/DayFilter/DayFilter.jsx","Timeline/Header/DisplayOrderToggle/DisplayOrderToggle.jsx","Timeline/Header/EpisodeFilter/EpisodeFilter.jsx","Timeline/Header/ResetFilters/ResetFilters.jsx","Timeline/Header/YearFilter/YearFilter.jsx","Timeline/Header/Header.jsx","Timeline/Scenes/Loading/Loading.jsx","Timeline/Scenes/Modal/Modal.jsx","Timeline/Scenes/Scene/Scene.jsx","Timeline/Scenes/Scenes.jsx","Timeline/Timeline.jsx","App.jsx","serviceWorker.js","index.js"],"names":["CharacterFilter","props","onChange","bind","characters","id","value","e","currentTarget","this","className","htmlFor","filters","character","map","option","_i","key","React","Component","DayFilter","days","day","DisplayOrderToggle","defaultChecked","icons","source","chronological","episodic","displayOrder","EpisodeFilter","episodes","episode","ResetFilters","onClick","YearFilter","years","year","Header","style","color","target","href","updateToggle","updateFilters","resetFilters","Loading","Modal","renderPrev","renderNext","renderImages","renderDescription","months","sceneModalIdx","type","navigatePrev","lastSceneModalIdx","navigateNext","scene","images","i","medium","url","process","src","description","month","parseInt","date","data-id","season","close","Scene","renderImage","isTimeTravel","maxDescriptionLen","length","substring","thumb","trimmedDescription","timeTravel","timeTravelClass","sceneIdx","openModal","tabIndex","Scenes","closeModal","prevSceneModal","nextSceneModal","fetchData","orderedScenes","renderScenes","state","isLoading","data","scenes","setState","dataset","document","getElementsByTagName","classList","add","remove","self","fetch","then","response","json","result","slice","sort","a","b","rank","filter","toString","padStart","indexOf","idx","renderModal","Timeline","characer","checked","App","width","Boolean","window","location","hostname","match","ReactGA","initialize","pageview","pathname","search","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.d9b074de.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './CharacterFilter.css';\n\nclass CharacterFilter extends React.Component {\n  static propTypes = {\n    filters: PropTypes.object.isRequired,\n    onChange: PropTypes.func.isRequired\n  }\n\n  constructor(props) {\n    super(props);\n\n    this.onChange = this.onChange.bind(this);\n\n    this.characters = [\n      { id: '', value: 'All' },\n      { id: 'Agnes Nielsen', value: 'Agnes Nielsen' },\n      { id: 'Alexsander Tiedemann', value: 'Alexsander Tiedemann' },\n      { id: 'Bartosz Tiedemann', value: 'Bartosz Tiedemann' },\n      { id: 'Benni Wöller', value: 'Benni Wöller' },\n      { id: 'Bernd Doppler', value: 'Bernd Doppler' },\n      { id: 'Charlotte Doppler', value: 'Charlotte Doppler' },\n      { id: 'Claudia Tiedemann', value: 'Claudia Tiedemann' },\n      { id: 'Clausen', value: 'Clausen' },\n      { id: 'Daniel Kahnwald', value: 'Daniel Kahnwald' },\n      { id: 'Donata Kraus', value: 'Donata Kraus' },\n      { id: 'Doris Tiedemann', value: 'Doris Tiedemann' },\n      { id: 'Egon Tiedemann', value: 'Egon Tiedemann' },\n      { id: 'Elisabeth Doppler', value: 'Elisabeth Doppler' },\n      { id: 'Ema Nielsen', value: 'Ema Nielsen' },\n      { id: 'Erik Obendorf', value: 'Erik Obendorf' },\n      { id: 'Franziska Doppler', value: 'Franziska Doppler' },\n      { id: 'Greta Doppler', value: 'Greta Doppler' },\n      { id: 'Gretchen', value: 'Gretchen' },\n      { id: 'H.G. Tannhaus', value: 'H.G. Tannhaus' },\n      { id: 'Hannah Kahnwald', value: 'Hannah Kahnwald' },\n      { id: 'Helge Doppler', value: 'Helge Doppler' },\n      { id: 'Ines Kahnwald', value: 'Ines Kahnwald' },\n      { id: 'Jana Nielsen', value: 'Jana Nielsen' },\n      { id: 'Jonas Kahnwald', value: 'Jonas Kahnwald' },\n      { id: 'Jürgen Obendorf', value: 'Jürgen Obendorf' },\n      { id: 'Katharina Nielsen', value: 'Katharina Nielsen' },\n      { id: 'Mads Nielsen', value: 'Mads Nielsen' },\n      { id: 'Magnus Nielsen', value: 'Magnus Nielsen' },\n      { id: 'Martha Nielsen', value: 'Martha Nielsen' },\n      { id: 'Michael Kahnwald', value: 'Michael Kahnwald' },\n      { id: 'Mikkel Nielsen', value: 'Mikkel Nielsen' },\n      { id: 'Noah', value: 'Noah' },\n      { id: 'Peter Doppler', value: 'Peter Doppler' },\n      { id: 'Regina Tiedemann', value: 'Regina Tiedemann' },\n      { id: 'Silja', value: 'Silja' },\n      { id: 'Torben Wöller', value: 'Torben Wöller' },\n      { id: 'Tronte Nielsen', value: 'Tronte Nielsen' },\n      { id: 'Ulla Obendorf', value: 'Ulla Obendorf' },\n      { id: 'Ulrich Nielsen', value: 'Ulrich Nielsen' },\n      { id: 'Yasin Friese', value: 'Yasin Friese' }\n    ]\n  }\n\n  onChange(e) {\n    let value = e.currentTarget.value;\n\n    if (value === '') {\n      value = null;\n    }\n\n    this.props.onChange('character', value);\n  }\n\n  render() {\n    return (\n      <div className=\"character-filter header-block\">\n        <label htmlFor='character-filter'>\n          character\n        </label>\n        <select\n          id=\"character-filter\"\n          onChange={this.onChange}\n          value={this.props.filters.character || ''}>\n          {\n            this.characters.map((option, _i) => {\n              return (\n                <option key={`character-filter-${option.id}`} value={option.id}>\n                  {option.value}\n                </option>\n              );\n            })\n          }\n        </select>\n      </div>\n    );\n  }\n}\n\nexport default CharacterFilter;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './DayFilter.css';\n\nclass DayFilter extends React.Component {\n  static propTypes = {\n    filters: PropTypes.object.isRequired,\n    onChange: PropTypes.func.isRequired\n  }\n\n  constructor(props) {\n    super(props);\n\n    this.onChange = this.onChange.bind(this);\n\n    this.days = [\n      { id: '', value: 'All' },\n\n      {id: '06-20', value: 'Jun 20'},\n      {id: '06-21', value: 'Jun 21'},\n      {id: '06-22', value: 'Jun 22'},\n      {id: '06-23', value: 'Jun 23'},\n      {id: '06-24', value: 'Jun 24'},\n      {id: '06-25', value: 'Jun 25'},\n      {id: '06-26', value: 'Jun 26'},\n      {id: '06-27', value: 'Jun 27'},\n\n      {id: '11-04', value: 'Nov 4'},\n      {id: '11-05', value: 'Nov 5'},\n      {id: '11-06', value: 'Nov 6'},\n      {id: '11-07', value: 'Nov 7'},\n      {id: '11-08', value: 'Nov 8'},\n      {id: '11-09', value: 'Nov 9'},\n      {id: '11-10', value: 'Nov 10'},\n      {id: '11-11', value: 'Nov 11'},\n      {id: '11-12', value: 'Nov 12'},\n    ]\n  }\n\n  onChange(e) {\n    let value = e.currentTarget.value;\n\n    if (value === '') {\n      value = null;\n    }\n\n    this.props.onChange('day', value);\n  }\n\n  render() {\n    return (\n      <div className=\"day-filter header-block\">\n        <label htmlFor='day-filter'>\n          Day\n        </label>\n        <select\n          id=\"day-filter\"\n          onChange={this.onChange}\n          value={this.props.filters.day || ''}>\n          {\n            this.days.map((option, _i) => {\n              return (\n                <option key={`day-filter-${option.id}`} value={option.id}>\n                  {option.value}\n                </option>\n              );\n            })\n          }\n        </select>\n      </div>\n    );\n  }\n}\n\nexport default DayFilter;\n","import React from 'react';\nimport ReactMarkdown from 'react-markdown';\nimport Toggle from 'react-toggle'\nimport PropTypes from 'prop-types';\n\nimport './DisplayOrderToggle.css';\nimport \"react-toggle/style.css\"\n\nfunction DisplayOrderToggle(props) {\n  const copy = {\n    chronological: 'Viewing in **chronological** order of events',\n    episodic: 'Viewing in **televised** episode order'\n   }\n\n  return (\n    <div className=\"display-order-toggle\">\n      <Toggle\n        id='display-order-toggle'\n        defaultChecked={false}\n        icons={false}\n        onChange={props.onChange} />\n      <label htmlFor='display-order-toggle'>\n        <ReactMarkdown source={copy[props.displayOrder]} />\n      </label>\n    </div>\n  );\n}\n\nDisplayOrderToggle.propTypes = {\n  displayOrder: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired\n}\n\nexport default DisplayOrderToggle;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './EpisodeFilter.css';\n\n\nclass EpisodeFilter extends React.Component {\n  static propTypes = {\n    filters: PropTypes.object.isRequired,\n    onChange: PropTypes.func.isRequired\n  }\n\n  constructor(props) {\n    super(props);\n\n    this.onChange = this.onChange.bind(this);\n\n    this.episodes = [\n      { id: '', value: 'All' },\n      { id: 's1e01', value: 'S1 E01' },\n      { id: 's1e02', value: 'S1 E02' },\n      { id: 's1e03', value: 'S1 E03' },\n      { id: 's1e04', value: 'S1 E04' },\n      { id: 's1e05', value: 'S1 E05' },\n      { id: 's1e06', value: 'S1 E06' },\n      { id: 's1e07', value: 'S1 E07' },\n      { id: 's1e08', value: 'S1 E08' },\n      { id: 's1e09', value: 'S1 E09' },\n      { id: 's1e10', value: 'S1 E10' },\n\n      { id: 's2e01', value: 'S2 E01' },\n      { id: 's2e02', value: 'S2 E02' },\n      { id: 's2e03', value: 'S2 E03' },\n      { id: 's2e04', value: 'S2 E04' },\n      { id: 's2e05', value: 'S2 E05' },\n      { id: 's2e06', value: 'S2 E06' },\n      { id: 's2e07', value: 'S2 E07' },\n      { id: 's2e08', value: 'S2 E08' }\n    ]\n  }\n\n  onChange(e) {\n    let value = e.currentTarget.value;\n\n    if (value === '') {\n      value = null;\n    }\n\n    this.props.onChange('episode', value);\n  }\n\n  render() {\n    return (\n      <div className=\"episode-filter header-block\">\n        <label htmlFor='episode-filter'>\n          Episode\n        </label>\n        <select\n          id=\"episode-filter\"\n          onChange={this.onChange}\n          value={this.props.filters.episode || ''}>\n          {\n            this.episodes.map((option, _i) => {\n              return (\n                <option key={`episode-filter-${option.id}`} value={option.id}>\n                  {option.value}\n                </option>\n              );\n            })\n          }\n        </select>\n      </div>\n    );\n  }\n}\n\nexport default EpisodeFilter;\n","import PropTypes from 'prop-types';\nimport React from 'react';\n\nimport './ResetFilters.css';\n\nfunction ResetFilters(props) {\n  return (\n    <div onClick={props.onClick} className='reset-filters'>\n      Clear all filters\n    </div>\n  );\n}\n\nResetFilters.propTypes = {\n  onClick: PropTypes.func.isRequired\n}\n\nexport default ResetFilters;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './YearFilter.css';\n\nclass YearFilter extends React.Component {\n  static propTypes = {\n    filters: PropTypes.object.isRequired,\n    onChange: PropTypes.func.isRequired\n  }\n\n  constructor(props) {\n    super(props);\n\n    this.onChange = this.onChange.bind(this);\n\n    this.years = [\n      { id: '', value: 'All' },\n      { id: '1921', value: '1921' },\n      { id: '1953', value: '1953' },\n      { id: '1954', value: '1954' },\n      { id: '1986', value: '1986' },\n      { id: '1987', value: '1987' },\n      { id: '2019', value: '2019' },\n      { id: '2020', value: '2020' },\n      { id: '2052', value: '2052' },\n      { id: '2053', value: '2053' }\n    ]\n  }\n\n  onChange(e) {\n    let value = e.currentTarget.value;\n\n    if (value === '') {\n      value = null;\n    }\n\n    this.props.onChange('year', value);\n  }\n\n  render() {\n    return (\n      <div className=\"year-filter header-block\">\n        <label htmlFor='year-filter'>\n          Year\n        </label>\n        <select\n          id=\"year-filter\"\n          onChange={this.onChange}\n          value={this.props.filters.year || ''}>\n          {\n            this.years.map((option, _i) => {\n              return (\n                <option key={`year-filter-${option.id}`} value={option.id}>\n                  {option.value}\n                </option>\n              );\n            })\n          }\n        </select>\n      </div>\n    );\n  }\n}\n\nexport default YearFilter;\n","import CharacterFilter from './CharacterFilter/CharacterFilter';\nimport DayFilter from './DayFilter/DayFilter';\nimport DisplayOrderToggle from './DisplayOrderToggle/DisplayOrderToggle';\nimport EpisodeFilter from './EpisodeFilter/EpisodeFilter';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport ResetFilters from './ResetFilters/ResetFilters';\nimport YearFilter from './YearFilter/YearFilter';\n\nimport './Header.css';\n\nclass Header extends React.Component {\n  static propTypes = {\n    updateToggle: PropTypes.func.isRequired,\n    updateFilters: PropTypes.func.isRequired,\n    resetFilters: PropTypes.func.isRequired,\n    displayOrder: PropTypes.string.isRequired,\n    filters: PropTypes.object.isRequired\n  };\n\n  render() {\n    return (\n      <div className=\"header\">\n        <p style={{color: 'chartreuse'}}>Below, you can explore each scene in chronological order of the timeline, or in the televised episode order.</p>\n        <p style={{color: 'chartreuse'}}>\n          You may also find the <a target='_blank' href='https://dark-netflix.fandom.com/'>Dark Wiki</a> and the <a target='_blank' href='https://en.wikipedia.org/wiki/Dark_(TV_series)#Family_tree'>Family Tree</a> to be useful references.\n        </p>\n\n        <DisplayOrderToggle\n          displayOrder={this.props.displayOrder}\n          onChange={this.props.updateToggle} />\n        <EpisodeFilter\n          filters={this.props.filters}\n          onChange={this.props.updateFilters} />\n        <YearFilter\n          filters={this.props.filters}\n          onChange={this.props.updateFilters} />\n        <DayFilter\n          filters={this.props.filters}\n          onChange={this.props.updateFilters} />\n        <CharacterFilter\n          filters={this.props.filters}\n          onChange={this.props.updateFilters} />\n\n        <ResetFilters\n          onClick={this.props.resetFilters} />\n      </div>\n    );\n  }\n}\n\nexport default Header;\n","import React from 'react';\nimport './Loading.css';\n\nfunction Loading() {\n  return (\n    <div className=\"scenes--loading\">\n      Loading...\n    </div>\n  );\n}\n\nexport default Loading;\n","import React from 'react';\nimport ReactMarkdown from 'react-markdown';\nimport PropTypes from 'prop-types';\n\nimport './Modal.css';\n\nclass Modal extends React.Component {\n  static propTypes = {\n    scene: PropTypes.object.isRequired,\n    sceneModalIdx: PropTypes.number.isRequired,\n    lastSceneModalIdx: PropTypes.number.isRequired,\n    close: PropTypes.func.isRequired,\n    navigateNext: PropTypes.func.isRequired,\n    navigatePrev: PropTypes.func.isRequired\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.renderPrev = this.renderPrev.bind(this);\n    this.renderNext = this.renderNext.bind(this);\n    this.renderImages = this.renderImages.bind(this);\n    this.renderDescription = this.renderDescription.bind(this);\n\n    this.months = [\n      'Jan',\n      'Feb',\n      'Mar',\n      'Apr',\n      'May',\n      'Jun',\n      'Jul',\n      'Aug',\n      'Sep',\n      'Oct',\n      'Nov',\n      'Dec'\n    ];\n  }\n\n  renderPrev() {\n    if (this.props.sceneModalIdx === 0) {\n      return <div className=\"nav-placeholder\"></div>;\n    };\n\n    return <button type=\"button\" className=\"prev\" onClick={this.props.navigatePrev}>← Prev</button>;\n  }\n\n  renderNext() {\n    if (this.props.sceneModalIdx === this.props.lastSceneModalIdx) {\n      return <div className=\"nav-placeholder\"></div>;\n    };\n\n    return <button type=\"button\" className=\"next\" onClick={this.props.navigateNext}>Next →</button>;\n  }\n\n  renderImages(scene) {\n    const urls = scene.images ? scene.images.map(i => i.medium) : ['/screenshots/placeholder.png'];\n\n    return urls.map((url) => {\n      return <a target=\"_blank\" href={process.env.PUBLIC_URL + url} ><img src={process.env.PUBLIC_URL + url} /></a>;\n    });\n  }\n\n  renderDescription(scene) {\n    return <ReactMarkdown source={scene.description} />;\n  }\n\n  render() {\n    const { scene } = this.props;\n    const month = this.months[parseInt(scene.date.month, 10) - 1];\n\n    return (\n      <div className=\"scene-modal modal\" data-id={`${scene.season}-${scene.episode}-${scene.scene}`} onClick={this.props.close}>\n        <div className=\"modal-content\">\n\n          <button type=\"button\" className=\"close\" onClick={this.props.close}>close</button>\n\n          <div className=\"nav\">\n            {this.renderPrev()}\n            <div className=\"progress\">\n              {this.props.sceneModalIdx + 1} of {this.props.lastSceneModalIdx + 1}\n            </div>\n            {this.renderNext()}\n          </div>\n\n          <h5 className=\"date\">{scene.date.day} {month} {scene.date.year}</h5>\n          <h6 className=\"episode\">S{scene.season} E{scene.episode}</h6>\n\n          <p className=\"description\">{this.renderDescription(scene)}</p>\n\n          <div className=\"images\">\n            {this.renderImages(scene)}\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n}\n\nexport default Modal;\n","import React from 'react';\nimport ReactMarkdown from 'react-markdown';\nimport PropTypes from 'prop-types';\n\nimport './Scene.css';\n\nclass Scene extends React.Component {\n  static propTypes = {\n    sceneIdx: PropTypes.number.isRequired,\n    scene: PropTypes.object.isRequired,\n    openModal: PropTypes.func.isRequired\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.renderImage = this.renderImage.bind(this);\n    this.renderDescription = this.renderDescription.bind(this);\n    this.isTimeTravel = this.isTimeTravel.bind(this);\n\n    this.maxDescriptionLen = 150;\n    this.months = [\n      'Jan',\n      'Feb',\n      'Mar',\n      'Apr',\n      'May',\n      'Jun',\n      'Jul',\n      'Aug',\n      'Sep',\n      'Oct',\n      'Nov',\n      'Dec'\n    ];\n  }\n\n  trimmedDescription(description) {\n    if (description.length <= this.maxDescriptionLen) return description;\n\n    return `${description.substring(0, this.maxDescriptionLen)}...`;\n  }\n\n  renderImage(scene) {\n    const src = scene.images ? scene.images[0].thumb : '/screenshots/placeholder-thumb.png';\n\n    return <img src={process.env.PUBLIC_URL + src} />;\n  }\n\n  renderDescription(scene) {\n    return <ReactMarkdown source={this.trimmedDescription(scene.description)} />;\n  }\n\n  isTimeTravel(scene) {\n    return scene.timeTravel && scene.timeTravel.id;\n  }\n\n  render() {\n    const { scene } = this.props;\n    const month = this.months[parseInt(scene.date.month, 10) - 1];\n    const timeTravelClass = this.isTimeTravel(scene) ? 'scene--time-travel' : '';\n\n    return (\n      <div className={`scene ${timeTravelClass}`} data-id={this.props.sceneIdx} onClick={this.props.openModal} tabIndex={0}>\n        {this.renderImage(scene)}\n\n        <h5 className=\"date\">{scene.date.day} {month} {scene.date.year}</h5>\n        <h6 className=\"episode\">S{scene.season} E{scene.episode}</h6>\n\n        <p className=\"description\">{this.renderDescription(scene)}</p>\n      </div>\n    );\n  }\n\n}\n\nexport default Scene;\n","import Loading from './Loading/Loading';\nimport Modal from './Modal/Modal';\nimport React from 'react';\nimport Scene from './Scene/Scene';\nimport PropTypes from 'prop-types';\n\nimport './Scenes.css';\n\nclass Scenes extends React.Component {\n  static propTypes = {\n    displayOrder: PropTypes.string.isRequired,\n    filters: PropTypes.object.isRequired\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.openModal = this.openModal.bind(this);\n    this.closeModal = this.closeModal.bind(this);\n    this.prevSceneModal = this.prevSceneModal.bind(this);\n    this.nextSceneModal = this.nextSceneModal.bind(this);\n    this.fetchData = this.fetchData.bind(this);\n    this.orderedScenes = this.orderedScenes.bind(this);\n    this.renderScenes = this.renderScenes.bind(this);\n\n    this.state = {\n      isLoading: true,\n      data: null,\n      scenes: null,\n      sceneModalIdx: null\n    }\n  }\n\n  componentDidMount() {\n    this.fetchData();\n  }\n\n  openModal(e) {\n    this.setState({ sceneModalIdx: parseInt(e.currentTarget.dataset.id) });\n\n    const body = document.getElementsByTagName('body')[0];\n    body.classList.add('modal-open');\n  }\n\n  closeModal(e) {\n    // Only consider clicks on the direct element itself, not any\n    // child elements.\n    if (e.target !== e.currentTarget) return;\n\n    this.setState({ sceneModalIdx: null });\n\n    const body = document.getElementsByTagName('body')[0];\n    body.classList.remove('modal-open');\n  }\n\n  prevSceneModal() {\n    this.setState({\n      sceneModalIdx: this.state.sceneModalIdx - 1\n    });\n  }\n\n  nextSceneModal() {\n    this.setState({\n      sceneModalIdx: this.state.sceneModalIdx + 1\n    });\n  }\n\n  fetchData() {\n    const self = this;\n\n    this.setState({ isLoading: true });\n\n    fetch(process.env.PUBLIC_URL + '/data.json').\n      then(function(response) { return response.json(); }).\n      then(function(result) { self.setState({ scenes: result.data, isLoading: false }); });\n  }\n\n  orderedScenes() {\n    const { displayOrder, filters } = this.props;\n    let scenes = this.state.scenes.slice();\n\n    if (displayOrder === 'chronological') {\n      scenes.sort((a, b) => {\n        if (a.date.year < b.date.year) return -1;\n        if (a.date.year > b.date.year) return 1;\n        if (a.date.month < b.date.month) return -1;\n        if (a.date.month > b.date.month) return 1;\n        if (a.date.day < b.date.day) return -1;\n        if (a.date.day > b.date.day) return 1;\n        if (a.rank.chronological < b.rank.chronological) return -1;\n        if (a.rank.chronological > b.rank.chronological) return 1;\n      });\n    } else {\n      // Sort by episode\n      scenes.sort((a, b) => {\n        if (a.season < b.season) return -1;\n        if (a.season > b.season) return 1;\n        if (a.episode < b.episode) return -1;\n        if (a.episode > b.episode) return 1;\n        if (a.rank.episode < b.rank.episode) return -1;\n        if (a.rank.episode > b.rank.episode) return 1;\n      });\n    }\n\n    return this.filter(scenes, filters);\n  }\n\n  filter(scenes, filters) {\n    if (filters.episode) {\n      scenes = scenes.filter((scene) => {\n        const episode = `s${scene.season}e${scene.episode.toString().padStart(2, '0')}`;\n        return episode === filters.episode;\n      });\n    }\n\n    if (filters.year) {\n      scenes = scenes.filter((scene) => {\n        return scene.date.year.toString() === filters.year;\n      });\n    }\n\n    if (filters.day) {\n      scenes = scenes.filter((scene) => {\n        const day = `${scene.date.month.toString().padStart(2, '0')}-${scene.date.day.toString().padStart(2, '0')}`;\n        return day === filters.day;\n      });\n    }\n\n    if (filters.character) {\n      scenes = scenes.filter((scene) => {\n        return scene.characters.indexOf(filters.character) > -1;\n      });\n    }\n\n    return scenes;\n  }\n\n  renderModal() {\n    const { sceneModalIdx } = this.state;\n    if (sceneModalIdx === null) { return null; }\n\n    const scene = this.data[sceneModalIdx];\n\n    return (\n      <Modal\n        key={`modal-${sceneModalIdx}`}\n        scene={scene}\n        sceneModalIdx={sceneModalIdx}\n        lastSceneModalIdx={this.data.length - 1}\n        close={this.closeModal}\n        navigatePrev={this.prevSceneModal}\n        navigateNext={this.nextSceneModal} />\n    );\n  }\n\n  renderScenes() {\n    if (!this.state.scenes) {\n      return null;\n    }\n\n    return (\n      this.data.map((scene, idx) => {\n        return (\n          <Scene\n            sceneIdx={idx}\n            scene={scene}\n            openModal={this.openModal} />\n        );\n      })\n    );\n  }\n\n  render() {\n    if (this.state.isLoading) {\n      return <Loading />;\n    }\n\n    // Re-calculate list of scenes based on current filters\n    this.data = this.orderedScenes();\n\n    return (\n      <div className=\"scenes\">\n        {this.renderScenes()}\n        {this.renderModal()}\n      </div>\n    );\n  }\n\n}\n\nexport default Scenes;\n","import React from 'react';\nimport Header from './Header/Header';\nimport Scenes from './Scenes/Scenes';\n\nimport './Timeline.css';\n\nclass Timeline extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.updateToggle = this.updateToggle.bind(this);\n    this.updateFilters = this.updateFilters.bind(this);\n    this.resetFilters = this.resetFilters.bind(this);\n\n    this.state = {\n      displayOrder: 'episodic',\n      filters: {\n        episode: null,\n        year: null,\n        day: null,\n        characer: null\n      }\n    }\n  }\n\n  updateToggle(e) {\n    this.setState({\n      displayOrder: e.target.checked ? 'chronological' : 'episodic'\n    });\n  }\n\n  updateFilters(key, value) {\n    let { filters } = this.state;\n    filters[key] = value;\n\n    this.setState({ filters: filters });\n  }\n\n  resetFilters() {\n    this.setState({\n      filters: {\n        episode: null,\n        year: null,\n        day: null\n      }\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"timeline\">\n        <Header\n          updateToggle={this.updateToggle}\n          updateFilters={this.updateFilters}\n          resetFilters={this.resetFilters}\n          displayOrder={this.state.displayOrder}\n          filters={this.state.filters} />\n        <Scenes\n          displayOrder={this.state.displayOrder}\n          filters={this.state.filters} />\n      </div>\n    );\n  }\n\n}\n\nexport default Timeline;\n","import React from 'react';\nimport Timeline from './Timeline/Timeline';\n\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"app\">\n      <img className=\"title-card\" src={process.env.PUBLIC_URL + '/dark-title-card.png'} width=\"490px\" />\n\n      <div className=\"intro\">\n        <h1>Explore the Timeline of 'Dark'</h1>\n\n        <p>If you'd like to build your own visualizations, <a href={process.env.PUBLIC_URL + '/data.json'}>the data set for episodes</a> is free to use.</p>\n        <p>If you've found this or any other of my projects useful, I would greatly appreciate if you could <a target=\"_blank\" href=\"https://www.buymeacoffee.com/abhchand\">buy me a coffee!</a></p>\n      </div>\n\n      <div className=\"coming-soon\">\n        This timeline covers Seasons 1 & 2. Season 3 is coming soon!\n      </div>\n\n      <Timeline />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport ReactGA from 'react-ga';\n\nReactGA.initialize('UA-93556188-1');\nReactGA.pageview(window.location.pathname + window.location.search);\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}